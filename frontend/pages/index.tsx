import { Note } from "@/types";
import { API } from "aws-amplify";
import Head from "next/head";
import Link from "next/link";
import { GetServerSideProps } from "next";
import configAmplify from "@/amplify.config";

interface HomeProps {
  notes: Note[];
}

function getNotes() {
  return API.get("notes", "/notes", {});
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  // To accomplish SSR we need to configure the Amplify API stuff here, because
  // getServerSideProps runs before anything gets to the client. Then we'll configure
  // it again on the client side in _app.tsx. Not sure if there's a better way to do this yet.
  configAmplify();
  try {
    const res = (await getNotes()) as Note[];
    return {
      props: {
        notes: res,
      },
    };
  } catch (e) {
    console.error(e);
    return {
      notFound: true,
    };
  }
};

export default function Home(props: HomeProps) {
  const { notes } = props;

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="container mx-auto mt-8 px-8 flex flex-col space-y-6">
          <h1 className="text-2xl">Simple Notes üç©</h1>
          <p>A simple serverless app made with SST</p>
          <Link href="/create-note">
            <a className="text-purple-500 underline decoration-purple-500">
              Create new note
            </a>
          </Link>
          <h2 className="text-xl">Previous notes</h2>
          <ul className="space-y-1">
            {notes.map((note) => (
              <li key={note.noteId}>{note.content}</li>
            ))}
          </ul>
        </div>
      </main>
    </>
  );
}
